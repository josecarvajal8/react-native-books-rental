// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Render login component correctly 1`] = `
<RCTSafeAreaView
  emulateUnlessSupported={true}
  style={
    Object {
      "backgroundColor": "#dee7ea",
      "flex": 1,
      "paddingHorizontal": 20,
    }
  }
>
  <RCTScrollView
    collapsable={false}
    onGestureHandlerEvent={[Function]}
    onGestureHandlerStateChange={[Function]}
    style={
      Object {
        "backgroundColor": "#dee7ea",
        "flex": 1,
        "paddingHorizontal": 20,
      }
    }
  >
    <View>
      <View
        style={
          Object {
            "alignItems": "center",
          }
        }
      >
        <Image
          forwardedRef={[Function]}
          source={
            Object {
              "testUri": "../../../src/assets/img/logo.jpg",
            }
          }
          style={
            Object {
              "borderRadius": 100,
              "height": 100,
              "marginBottom": 10,
              "marginTop": 20,
              "width": 100,
            }
          }
        />
        <Text
          forwardedRef={[Function]}
          style={
            Object {
              "fontFamily": "Montserrat-Bold",
              "fontSize": 20,
              "marginBottom": 20,
            }
          }
        >
          [missing "en.global.welcome" translation]
        </Text>
        <View
          style={
            Object {
              "flex": 1,
            }
          }
        >
          <View
            style={
              Object {
                "marginBottom": 30,
              }
            }
          >
            <TextInput
              allowFontScaling={true}
              editable={true}
              onBlur={[Function]}
              onChangeText={[Function]}
              onFocus={[Function]}
              placeholder="[missing \\"en.login.name\\" translation]"
              placeholderTextColor="#0baee6"
              rejectResponderTermination={true}
              style={
                Object {
                  "backgroundColor": "#ffffff",
                  "borderColor": "#626565",
                  "borderRadius": 60,
                  "borderWidth": 2,
                  "color": "#0baee6",
                  "fontFamily": "Montserrat-Regular",
                  "height": 45,
                  "padding": 10,
                  "width": 300,
                }
              }
              underlineColorAndroid="transparent"
              value=""
            />
          </View>
          <View
            style={
              Object {
                "marginBottom": 30,
              }
            }
          >
            <TextInput
              allowFontScaling={true}
              editable={true}
              onBlur={[Function]}
              onChangeText={[Function]}
              onFocus={[Function]}
              placeholder="[missing \\"en.login.lastname\\" translation]"
              placeholderTextColor="#0baee6"
              rejectResponderTermination={true}
              style={
                Object {
                  "backgroundColor": "#ffffff",
                  "borderColor": "#626565",
                  "borderRadius": 60,
                  "borderWidth": 2,
                  "color": "#0baee6",
                  "fontFamily": "Montserrat-Regular",
                  "height": 45,
                  "padding": 10,
                  "width": 300,
                }
              }
              underlineColorAndroid="transparent"
              value=""
            />
          </View>
          <View
            style={
              Object {
                "marginBottom": 30,
              }
            }
          >
            <TextInput
              allowFontScaling={true}
              editable={true}
              onBlur={[Function]}
              onChangeText={[Function]}
              onFocus={[Function]}
              placeholder="[missing \\"en.login.mail\\" translation]"
              placeholderTextColor="#0baee6"
              rejectResponderTermination={true}
              style={
                Object {
                  "backgroundColor": "#ffffff",
                  "borderColor": "#626565",
                  "borderRadius": 60,
                  "borderWidth": 2,
                  "color": "#0baee6",
                  "fontFamily": "Montserrat-Regular",
                  "height": 45,
                  "padding": 10,
                  "width": 300,
                }
              }
              underlineColorAndroid="transparent"
              value=""
            />
          </View>
          <View
            style={
              Object {
                "marginBottom": 30,
              }
            }
          >
            <View
              forwardedRef={[Function]}
              style={
                Object {
                  "backgroundColor": "#ffffff",
                  "borderColor": "#626565",
                  "borderRadius": 60,
                  "borderWidth": 2,
                  "height": 50,
                }
              }
            >
              <View
                accessible={true}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "marginLeft": 10,
                    "marginTop": 10,
                    "opacity": 1,
                  }
                }
              >
                <Text
                  style={
                    Object {
                      "color": "#0baee6",
                      "fontFamily": "Montserrat-Regular",
                    }
                  }
                >
                  [missing "en.login.age" translation]
                </Text>
              </View>
              <View
                style={
                  Object {
                    "marginBottom": 10,
                    "marginTop": 10,
                  }
                }
              />
            </View>
          </View>
          <View
            style={
              Object {
                "marginBottom": 30,
              }
            }
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "justifyContent": "center",
                  "padding": 10,
                }
              }
            >
              <RNGestureHandlerButton
                collapsable={false}
                onGestureEvent={[Function]}
                onGestureHandlerEvent={[Function]}
                onGestureHandlerStateChange={[Function]}
                onHandlerStateChange={[Function]}
                rippleColor={0}
              >
                <View
                  accessible={true}
                  style={
                    Object {
                      "alignItems": "center",
                      "borderWidth": 1,
                      "height": 18,
                      "justifyContent": "center",
                      "marginRight": 10,
                      "opacity": 1,
                      "width": 18,
                    }
                  }
                >
                  <View
                    style={
                      Object {
                        "backgroundColor": "#ffffff",
                        "height": 12,
                        "width": 12,
                      }
                    }
                  />
                </View>
              </RNGestureHandlerButton>
              <Text
                style={
                  Object {
                    "fontFamily": "Montserrat-Regular",
                  }
                }
              >
                [missing "en.login.terms" translation]
              </Text>
            </View>
          </View>
          <View>
            <RNGestureHandlerButton
              collapsable={false}
              onGestureEvent={[Function]}
              onGestureHandlerEvent={[Function]}
              onGestureHandlerStateChange={[Function]}
              onHandlerStateChange={[Function]}
              rippleColor={0}
            >
              <View
                accessible={true}
                style={
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "#0baee6",
                    "borderRadius": 30,
                    "height": 45,
                    "justifyContent": "center",
                    "opacity": 1,
                    "padding": 10,
                  }
                }
              >
                <Text
                  style={
                    Object {
                      "color": "#ffffff",
                      "fontFamily": "Montserrat-SemiBold",
                    }
                  }
                >
                  [missing "en.login.login" translation]
                </Text>
              </View>
            </RNGestureHandlerButton>
          </View>
        </View>
      </View>
    </View>
  </RCTScrollView>
</RCTSafeAreaView>
`;
